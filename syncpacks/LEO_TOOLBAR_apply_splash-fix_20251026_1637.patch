diff --git a/app/src/main/java/com/example/leo/MainActivity.kt b/app/src/main/java/com/example/leo/MainActivity.kt
index 1111111..2222222 100644
--- a/app/src/main/java/com/example/leo/MainActivity.kt
+++ b/app/src/main/java/com/example/leo/MainActivity.kt
@@ -1,82 +1,82 @@
+package com.example.leo
+
+import android.os.Bundle
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.padding
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.Delete
+import androidx.compose.material.icons.filled.Settings
+import androidx.compose.material3.CenterAlignedTopAppBar
+import androidx.compose.material3.ExperimentalMaterial3Api
+import androidx.compose.material3.Icon
+import androidx.compose.material3.IconButton
+import androidx.compose.material3.Scaffold
+import androidx.compose.material3.SnackbarHost
+import androidx.compose.material3.SnackbarHostState
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Modifier
+import androidx.core.splashscreen.SplashScreen.Companion.installSplashScreen
+import com.example.leo.ui.chat.ChatScreen
+import com.example.leo.ui.settings.SettingsScreen
+
+class MainActivity : ComponentActivity() {
+    @OptIn(ExperimentalMaterial3Api::class)
+    override fun onCreate(savedInstanceState: Bundle?) {
+        // Handshake with Android 12+ splash (no extra hold)
+        installSplashScreen()
+        super.onCreate(savedInstanceState)
+
+        setContent {
+            val snackbar = remember { SnackbarHostState() }
+            var showSettings by remember { mutableStateOf(false) }
+
+            Scaffold(
+                topBar = {
+                    CenterAlignedTopAppBar(
+                        title = { Text("Little Genius") },
+                        navigationIcon = {
+                            IconButton(onClick = { showSettings = true }) {
+                                Icon(
+                                    imageVector = Icons.Filled.Settings,
+                                    contentDescription = "Settings"
+                                )
+                            }
+                        },
+                        actions = {
+                            IconButton(onClick = {
+                                // TODO: hook to your VM/repo to clear messages with confirmation
+                                // e.g., chatViewModel.clearChat()
+                            }) {
+                                Icon(
+                                    imageVector = Icons.Filled.Delete,
+                                    contentDescription = "Clear chat"
+                                )
+                            }
+                        }
+                    )
+                },
+                snackbarHost = { SnackbarHost(snackbar) }
+            ) { padding ->
+                Box(
+                    modifier = Modifier
+                        .fillMaxSize()
+                        .padding(padding)
+                ) {
+                    if (showSettings) {
+                        SettingsScreen(onBack = { showSettings = false })
+                    } else {
+                        ChatScreen()
+                    }
+                }
+            }
+        }
+    }
+}
